pipeline {
    agent {
        kubernetes {
            label 'circuit-scan-ci'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins: astro-blog-dep
spec:
  containers:
    - name: docker
      image: docker:20.10-dind
      tty: true
      stdin: true
      securityContext:
        privileged: true
        runAsUser: 0
      env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
      command:
        - /bin/sh
      args:
        - -c
        - "dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --insecure-registry=docker-registry.docker-registry.svc.cluster.local:5000 & while true; do sleep 100; done"
"""
        }
    }

    environment {
        APP_NAME = "circuit-scan"
        IMAGE_NAME = "circuit-scan:latest"
        DOCKER_HUB_REPO = "docker-registry.docker-registry.svc.cluster.local:5000/circuit-scan"
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Cloning repository...'
                checkout scm
            }
        }


        stage('Build Docker Image') {
            steps {
                container('docker') {
                echo 'Building Docker image...'
                sh "docker build -t ${IMAGE_NAME} ."
                }
            }
        }

        stage('Push to Docker Hub') {
            // when {
            //     branch 'main'  // Push to Docker Hub only on the main branch
            // }
            steps {
                container('docker') {
                echo 'Pushing Docker image to Docker Hub...'
                sh "docker tag ${IMAGE_NAME} ${DOCKER_HUB_REPO}"
                sh "docker push ${DOCKER_HUB_REPO}"
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed! Check errors.'
        }
    }
}