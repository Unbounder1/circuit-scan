pipeline {
    agent {
        kubernetes {
            label 'circuit-scan-ci'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins: astro-blog-dep
spec:
  containers:
    - name: docker
      image: docker:20.10-dind
      tty: true
      stdin: true
      securityContext:
        privileged: true
        runAsUser: 0
      env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
      command:
        - /bin/sh
      args:
        - -c
        - "dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --insecure-registry=docker-registry.docker-registry.svc.cluster.local:5000 & while true; do sleep 100; done"
      volumeMounts:
        - name: github-repo-volume
          mountPath: /workspace/github-repo
"""
        }
    }

    environment {
        APP_NAME = "circuit-scan"
        IMAGE_NAME = "circuit-scan:latest"
        DOCKER_HUB_REPO = "docker-registry.docker-registry.svc.cluster.local:5000/circuit-scan"
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Cloning repository...'
                checkout scm
            }
        }

        stage('Install Docker') {
            steps {
                container('kubectl') {
                sh '''
                #!/bin/bash
                if ! command -v git &> /dev/null
                then
                    set -e

                    echo "Updating system..."
                    apt-get update -y
                    apt-get upgrade -y

                    echo "Installing prerequisites..."
                    apt-get install -y \
                        apt-transport-https \
                        ca-certificates \
                        curl \
                        gnupg \
                        lsb-release

                    echo "Adding Dockerâ€™s official GPG key..."
                    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

                    echo "Setting up Docker repository..."
                    echo \
                    "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
                    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

                    echo "Installing Docker..."
                    apt-get update -y
                    apt-get install -y docker-ce docker-ce-cli containerd.io

                    echo "Docker version:"
                    docker --version
                else
                    echo "Docker already installed"
                fi
                '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                sh "docker build -t ${IMAGE_NAME} ."
            }
        }

        stage('Push to Docker Hub') {
            // when {
            //     branch 'main'  // Push to Docker Hub only on the main branch
            // }
            steps {
                echo 'Pushing Docker image to Docker Hub...'
                sh "docker tag ${IMAGE_NAME} ${DOCKER_HUB_REPO}"
                sh "docker push ${DOCKER_HUB_REPO}"
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed! Check errors.'
        }
    }
}